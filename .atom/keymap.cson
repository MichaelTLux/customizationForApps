# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'cmd-shift-p': 'core:move-up'
#   'cmd-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on OS X and `cmd+.` on other platforms. See the
# Debugging Guide for more information:
# * https://atom.io/docs/latest/hacking-atom-debugging#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'.editor':
  'cmd-shift-n': 'fuzzy-finder:toggle-file-finder'
  'cmd-1': 'tree-view:toggle'
  'cmd-shift-up': 'editor:move-line-up'
  'cmd-shift-down':'editor:move-line-down'
  'cmd-shift-w':'pane:close-other-items'
  'cmd-shift-a': 'command-palette:toggle'
  'cmd-l': 'go-to-line:toggle'
  'cmd-alt-cmd-up': 'pane:split-right'
  'cmd-alt-cmd-down': 'pane:split-down'
  'cmd-w': 'editor:select-word'

'atom-workspace atom-text-editor:not([mini])':
  'cmd-d': 'editor:duplicate-lines'
  'cmd-y': 'editor:delete-line'

'.platform-win32, .platform-linux':
  'cmd-alt-s': 'settings-view:open'

'body':
  'cmd-shift-w':'pane:close-other-items'
  'cmd-alt-s': 'application:show-settings'
  'cmd-alt-left': 'pane:show-previous-item'
  'cmd-alt-right': 'pane:show-next-item'
